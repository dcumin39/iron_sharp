{"name":"Iron sharp","tagline":"IronSharp is a .NET client for Iron.io","body":"![Fe#](http://c577730.r99.cf2.rackcdn.com/images/FeSharp.png)\r\n==========\r\n\r\n# IronSharp is a .NET client for [Iron.io](http://www.iron.io/)\r\n\r\n\r\n## Getting Started\r\n\r\n1. Sign up at <https://hud.iron.io/users/new>\r\n2. Get your credentials from <https://hud.iron.io/dashboard>\r\n\r\n## IronCache\r\n<http://dev.iron.io/cache/>\r\n```C#\r\n// =========================================================\r\n// Iron.io Cache\r\n// =========================================================\r\n\r\nIronCacheRestClient ironCacheClient = IronSharp.IronCache.Client.New();\r\n\r\n// Get a Cache object\r\nCacheClient cache = ironCacheClient.Cache(\"my_cache\");\r\n\r\n// Put value to cache by key\r\ncache.Put(\"number_item\", 42);\r\n\r\n// Get value from cache by key\r\nConsole.WriteLine(cache.Get(\"number_item\").Value);\r\n\r\n// Get value from cache by key\r\nConsole.WriteLine(cache.Get<int>(\"number_item\"));\r\n\r\n// Numbers can be incremented\r\ncache.Increment(\"number_item\", 10);\r\n\r\n// Immediately delete an item\r\ncache.Delete(\"number_item\");\r\n\r\ncache.Put(\"complex_item\", new {greeting = \"Hello\", target = \"world\"});\r\n\r\n// Get value from cache by key\r\nConsole.WriteLine(cache.Get(\"complex_item\").Value);\r\n\r\ncache.Delete(\"complex_item\");\r\n```\r\n\r\n## IronMQ\r\n<http://dev.iron.io/mq/>\r\n```C#\r\n// =========================================================\r\n// Iron.io MQ\r\n// =========================================================\r\n\r\nIronMqRestClient ironMq = IronSharp.IronMQ.Client.New();\r\n\r\n// Get a Queue object\r\nQueueClient queue = ironMq.Queue(\"my_queue\");\r\n\r\nQueueInfo info = queue.Info();\r\n\r\nConsole.WriteLine(info.Inspect());\r\n\r\n// Put a message on the queue\r\nstring messageId = @queue.Post(\"hello world!\");\r\n\r\nConsole.WriteLine(messageId);\r\n\r\n// Get a message\r\nQueueMessage msg = queue.Next();\r\n\r\nConsole.WriteLine(msg.Inspect());\r\n\r\n//# Delete the message\r\nbool deleted = msg.Delete();\r\n\r\nConsole.WriteLine(\"Deleted = {0}\", deleted);\r\n\r\nvar payload1 = new\r\n{\r\n    message = \"hello, my name is Iron.io 1\"\r\n};\r\n\r\nvar payload2 = new\r\n{\r\n    message = \"hello, my name is Iron.io 2\"\r\n};\r\n\r\nvar payload3 = new\r\n{\r\n    message = \"hello, my name is Iron.io 3\"\r\n};\r\n\r\nMessageIdCollection queuedUp = queue.Post(new[] {payload1, payload2, payload3});\r\n\r\nConsole.WriteLine(queuedUp.Inspect());\r\n\r\nQueueMessage next;\r\n\r\nwhile (queue.Read(out next))\r\n{\r\n    Console.WriteLine(next.Inspect());\r\n    Console.WriteLine(next.Delete());\r\n}\r\n```\r\n\r\n## IronWorker\r\n<http://dev.iron.io/worker/>\r\n```C#\r\n// =========================================================\r\n// Iron.io Worker\r\n// =========================================================\r\n\r\nIronWorkerRestClient workerClient = IronSharp.IronWorker.Client.New();\r\n\r\nstring taskId = workerClient.Tasks.Create(\"Test\", new {Key = \"Value\"});\r\n\r\nConsole.WriteLine(\"TaskID: {0}\", taskId);\r\n\r\nTaskInfoCollection taskInfoCollection = workerClient.Tasks.List(\"Test\");\r\n\r\nforeach (TaskInfo task in taskInfoCollection.Tasks)\r\n{\r\n    Console.WriteLine(task.Inspect());\r\n}\r\n\r\nScheduleOptions options = ScheduleBuilder.Build().\r\n    Delay(TimeSpan.FromMinutes(1)).\r\n    WithFrequency(TimeSpan.FromHours(1)).\r\n    RunFor(TimeSpan.FromHours(3)).\r\n    WithPriority(TaskPriority.Default);\r\n\r\nvar payload = new\r\n{\r\n    a = \"b\",\r\n    c = new[] {1, 2, 3}\r\n};\r\n\r\nScheduleIdCollection schedule = workerClient.Schedules.Create(\"Test\", payload, options);\r\n\r\nConsole.WriteLine(schedule.Inspect());\r\n\r\nworkerClient.Schedules.Cancel(schedule.Schedules.First().Id);\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}